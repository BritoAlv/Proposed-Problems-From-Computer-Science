Notice that if ans(n) = N, then the following holds:
	N do not contains digit 4.
	N - cant_4_le(N) = n.
	
n + the size of the number <= N with digit 4 is N.

the formula N - cant_4_le(N) is increasing <=, so can be binary searched.

(queda pendiente como establecer el upper bound de la búsqueda binaria).

para calcular la respuesta para los números de la forma 999... se puede usar la siguiente recurrencia:

ans[i] = 10^(i-1) + 9*ans[i-1]

ans[i] = 10^i - 9^i

cuando es dividido por 10^i - 1 converge a 1.

Si una sucesión monótona creciente posee una subsucesión que es convergente entonces esta sucesión converge.

Todo lo anterior no me permite poder escoger un límite superior adecuado para el valor de N, porque N, cant4(N) pueden ser relativamente iguales. 

Lo que significa que un guess de cual debe de ser el upper bound no debería estar teoricamente bien.

So, instead of focusing on how to find the correct upper bound because it's only needed to find an integer such upper_bound such that :  formula( upper_bound) > 1, this can be done in a for with the powers of 10.

Notar que este end debe ser calculado una sola vez para k = 10^12. La desventaja es que para números chiquitos se demoraría más de lo normal, por eso sería mejor una constante que dependa de n

Binary Search will give me s, e such that:

e - s <= 1 and formula(s) <= n, and formula(end+1) > n. This means that in the interval [s, e] for sure I will find the largest integer x for which formula(x) == n. Keeping in mind that the equation formula(x) = n, always have solution and formula(x) increases at most one step by step.

Once I have the largest integer for which formula(x) == n I have to find the x such that: formula(x) == n, and x do not contains 4's. But notice that if k contains 4's then formula(k) == formula(k-1)*, so I will have to decrease x until I get to a number that do not contains 4's. I can use a method that given x will return me the greatest number y <= x such that y do not contains 4. Thus I will have that:
	
	* formula(y) == formula(y+1) == .... formula(x)
	
because all the numbers y+1, .... contains 4.

So y should be the answer to the problem.
