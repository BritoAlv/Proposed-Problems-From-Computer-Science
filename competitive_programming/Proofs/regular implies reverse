Demostrar que si L es regular => L^R es regular.

Si L es regular entonces existe un autómata finito determinista D tal que Language(D) = L.

Voy a hacer un autómata no determinista D' y voy a demostrar que Language( D' ) = L^R. 

D' posee un estado inicial q', y además todos los estados de D.

Su función de transición es:

para cada transición de D: 

f(qi, x) = qj, añadir en D' la transición: f(qj, x) = qi.

de el estado inicial q' añadir una epsilon transición a cada uno de los estados aceptados de D.

el estado aceptado de D' es el estado inicial de D.

Si w es reconocido por L, entonces hay una secuencia de transiciones: q0q1...q_{w} tales que:

para i >= 1:
	qi  = f( q_{i-1}, w[i-1])

y además q_{w} es un estado aceptado. La secuencia posee tamaño w+1, porque D es finito no determinista por tanto cada transición consume un carácter.

notar que la secuencia de transiciones:
	q'q_{w}....q0
	
existen en D', por la definición de la función de transición de D', q_{w} = f(q', epsilon)

como q0 es aceptado y no hay más carácteres que consumir, D' acepta a w^R.

Ahora si asumo que:
	D' acepta a w, como (w^R)^R = w, tengo que demostrar que w^R es aceptado por D.
	
Como D' acepta a w, hay una secuencia de transiciones:

q'q0q1q2 .... q_m tales que q_m = estado inicial de D, 

Notar que q0 = f( q', epsilon), si q1 = f(q0, epsilon), remover esa transición no afecta nada, porque no tiene sentido hacer dos epsilon transiciones seguidas.

A excepción de q0, todas las restantes transiciones no son obtenidas a través de epsilon transiciones, porque estas solamente son partiendo de q'.

en particular esas transicines revertidas existen en el autómata D por tanto si w es aceptado en D' también es aceptado en D.		
